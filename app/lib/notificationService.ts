import nodemailer from 'nodemailer'

interface OrderData {
  id: string
  productName: string
  country: string
  price: number
  priceVND: number
  contactInfo: string
  orderDate: string
}

class NotificationService {
  private transporter: nodemailer.Transporter | null = null

  constructor() {
    this.initializeTransporter()
  }

  private initializeTransporter() {
    // Use Gmail SMTP for sending emails
    this.transporter = nodemailer.createTransporter({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER || 'your-email@gmail.com',
        pass: process.env.EMAIL_PASSWORD || 'your-app-password'
      }
    })
  }

  async sendPaymentSuccessNotification(orderData: OrderData): Promise<boolean> {
    if (!this.transporter) {
      console.error('Email transporter not initialized')
      return false
    }

    try {
      // Extract email from contact info
      const emailMatch = orderData.contactInfo.match(/Email:\s*([^\s]+)/)
      const customerEmail = emailMatch ? emailMatch[1] : null

      if (!customerEmail) {
        console.log('No email found in contact info, skipping notification')
        return false
      }

      const mailOptions = {
        from: process.env.EMAIL_USER || 'your-email@gmail.com',
        to: customerEmail,
        subject: 'üéâ Thanh to√°n th√†nh c√¥ng - Daily Telebox',
        html: this.generatePaymentSuccessEmail(orderData)
      }

      const result = await this.transporter.sendMail(mailOptions)
      console.log('Payment success email sent:', result.messageId)
      return true

    } catch (error) {
      console.error('Failed to send payment success notification:', error)
      return false
    }
  }

  private generatePaymentSuccessEmail(orderData: OrderData): string {
    const orderDate = new Date(orderData.orderDate).toLocaleString('vi-VN')

    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Thanh to√°n th√†nh c√¥ng</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #10b981, #059669); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
          .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
          .order-details { background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #10b981; }
          .status { display: inline-block; padding: 5px 15px; background: #dcfce7; color: #166534; border-radius: 20px; font-weight: bold; }
          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üéâ Thanh to√°n th√†nh c√¥ng!</h1>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng Daily Telebox</p>
          </div>

          <div class="content">
            <h2>Xin ch√†o!</h2>
            <p>Ch√∫ng t√¥i x√°c nh·∫≠n thanh to√°n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng. ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω.</p>

            <div class="order-details">
              <h3>üìã Chi ti·∫øt ƒë∆°n h√†ng</h3>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>M√£ ƒë∆°n h√†ng:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${orderData.id}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>S·∫£n ph·∫©m:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${orderData.productName}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>Qu·ªëc gia:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${orderData.country}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>S·ªë ti·ªÅn:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${orderData.priceVND.toLocaleString()} VND</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>Th·ªùi gian:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${orderDate}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0;"><strong>Tr·∫°ng th√°i:</strong></td>
                  <td style="padding: 8px 0;"><span class="status">ƒêang x·ª≠ l√Ω</span></td>
                </tr>
              </table>
            </div>

            <h3>‚è±Ô∏è Quy tr√¨nh x·ª≠ l√Ω ƒë∆°n h√†ng:</h3>
            <ol>
              <li>‚úÖ <strong>Thanh to√°n th√†nh c√¥ng</strong> - ƒê√£ nh·∫≠n thanh to√°n</li>
              <li>üîÑ <strong>ƒêang x·ª≠ l√Ω</strong> - K√≠ch ho·∫°t eSIM/USIM</li>
              <li>üìß <strong>G·ª≠i th√¥ng tin</strong> - Email h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng (5-10 ph√∫t)</li>
            </ol>

            <p><strong>L∆∞u √Ω:</strong> Th√¥ng tin k√≠ch ho·∫°t s·∫Ω ƒë∆∞·ª£c g·ª≠i v·ªÅ email n√†y trong v√≤ng 5-10 ph√∫t. Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ ƒë·∫øn v√† th∆∞ r√°c.</p>

            <div style="background: #fff3cd; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #ffc107;">
              <strong>üìû C·∫ßn h·ªó tr·ª£?</strong><br>
              N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá b·ªô ph·∫≠n h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i.
            </div>
          </div>

          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© Daily Telebox</strong></p>
            <p style="margin-top: 10px; font-size: 12px; color: #999;">
              Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.
            </p>
          </div>
        </div>
      </body>
      </html>
    `
  }
}

// Export singleton instance
export const notificationService = new NotificationService()